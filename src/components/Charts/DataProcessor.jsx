import React, { useState, useEffect } from "react";

const DataProcessor = ({ children }) => {
  const [curtailmentData, setCurtailmentData] = useState(null);
  const [productionData, setProductionData] = useState(null);
  const [error, setError] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const processData = () => {
      try {
        const jsonData = {
          Solar2019: [
            12314.070694290009, 79779.74428023945, 119986.20716726365,
            183740.48537693333, 214258.29292289927, 41252.145882550365,
            19889.13790571809, 14052.16228041231, 56763.128750944394,
            47333.417885069146, 67493.07999591519, 64822.62494003458,
          ],
          Wind2019: [
            449.3897395157914, 2831.202687754727, 2238.5596226472503,
            10228.54253437759, 8936.789351861406, 7356.722545215833,
            929.8740855322051, 100.6489783139083, 2873.458989674613,
            856.7541857246799, 2264.5561165562294, 4490.418120154969,
          ],
          Total2019: [
            12763.4604338058, 82610.94696799418, 122224.7667899109,
            193969.02791131093, 223195.08227476067, 48608.8684277662,
            20819.011991250292, 14152.81125872622, 59636.587740619005,
            48190.17207079383, 69757.63611247142, 69313.04306018955,
          ],
          Solar2020: [
            130069.55907601574, 150212.73592513066, 165767.85517536037,
            309803.33601991535, 242049.5504285409, 197759.43848480086,
            29309.44957304032, 22673.032848557752, 52747.20735688052,
            91157.4427907252, 57453.59695165047, 48216.85127022571,
          ],
          Wind2020: [
            7932.5637149529975, 6845.66155290021, 13313.054013263118,
            8640.65671961097, 13279.99752801116, 8651.243875415337,
            1557.614390897322, 530.6246433146629, 4011.537901508979,
            8105.90778187005, 9493.24393700501, 7913.7874599918705,
          ],
          Total2020: [
            138002.12279096874, 157058.39747803088, 179080.90918862348,
            318443.9927395263, 255329.54795655207, 206410.68236021622,
            30867.063963937642, 23203.657491872415, 56758.7452583895,
            99263.35057259524, 66946.84088865548, 56130.63873021758,
          ],
          Solar2021: [
            57293.25983437172, 130879.31295277979, 323572.03449893894,
            175368.08485253024, 317048.9479721773, 87512.47690746948,
            31938.089930688522, 31837.6782833273, 35999.0361188775,
            133307.3699299837, 42590.23151255306, 58979.39124042008,
          ],
          Wind2021: [
            5036.4788210863535, 6852.1302161663025, 18386.675821678906,
            17150.909521617825, 10682.310530697354, 4862.8556555531395,
            2147.5270388171957, 4898.06829787469, 926.8711727261461,
            2370.9674352974416, 646.5165590912, 4515.384587708171,
          ],
          Total2021: [
            62329.738655458066, 137731.44316894608, 341958.7103206178,
            192518.99437414808, 327731.25850287464, 92375.33256302262,
            34085.61696950572, 36735.74658120199, 36925.90729160364,
            135678.33736528113, 43236.74807164426, 63494.77582812825,
          ],
          Solar2022: [
            56761.084102054156, 258516.28485645875, 436000.53965953155,
            565470.6961156741, 462275.70957774064, 193760.28665067017,
            91639.38992221102, 32883.3287054291, 56414.80205179555,
            87230.4017717437, 65182.95221062421, 14122.949949541842,
          ],
          Wind2022: [
            664.8785806917815, 3600.3156326139524, 27314.733101147736,
            30704.513992335083, 19421.229485133867, 8243.85205973388,
            6861.0306777189, 1528.8571107907107, 5106.672205728068,
            12286.17037462994, 10792.385739483094, 2465.0987384710243,
          ],
          Total2022: [
            57425.962682745936, 262116.6004890727, 463315.2727606793,
            596175.2101080093, 481696.93906287453, 202004.13871040405,
            98500.42059992992, 34412.185816219804, 61521.474257523616,
            99516.57214637364, 75975.33795010729, 16588.048688012866,
          ],
          Solar2023: [
            49551.748191011684, 193402.03783195352, 571597.3728597922,
            672010.2797144718, 348136.00693134515, 192035.2711392477,
            55704.53996314775, 48379.24457240188, 73386.03768713809,
            204586.0833721206, 68878.73453982153, 31256.030072073794,
          ],
          Wind2023: [
            3645.870562094333, 10567.317412062199, 34580.518974978855,
            30872.966069103975, 31706.057078671434, 21951.270358488036,
            2171.4615254974456, 893.4020940386976, 2634.9041349147024,
            6827.249549323313, 1894.3316685912414, 2857.0600354464345,
          ],
          Total2023: [
            53197.61875310601, 203969.35524401572, 606177.8918347711,
            702883.2457835757, 379842.06401001656, 213986.5414977357,
            57876.0014886452, 49272.64666644058, 76020.94182205279,
            211413.3329214439, 70773.06620841277, 34113.09010752023,
          ],
        };

        const months = [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ];

        const processedCurtailmentData = Object.entries(jsonData).map(
          ([key, values]) => ({
            Source: key,
            ...Object.fromEntries(
              months.map((month, index) => [month, values[index]])
            ),
          })
        );

        setCurtailmentData(processedCurtailmentData);

        setProductionData(processedCurtailmentData);

        console.log("Processed Curtailment Data:", processedCurtailmentData);
      } catch (e) {
        console.error("Error processing data:", e);
        setError(e.toString());
      } finally {
        setLoading(false);
      }
    };

    processData();
  }, []);

  if (loading) return <div>Loading data...</div>;
  if (error) return <div>Error: {error}</div>;
  return children({ curtailmentData, productionData });
};

export default DataProcessor;
